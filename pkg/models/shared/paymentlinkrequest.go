// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type PaymentLinkRequestCountry string

const (
	PaymentLinkRequestCountryFr PaymentLinkRequestCountry = "fr"
	PaymentLinkRequestCountryEs PaymentLinkRequestCountry = "es"
	PaymentLinkRequestCountryDe PaymentLinkRequestCountry = "de"
	PaymentLinkRequestCountryGb PaymentLinkRequestCountry = "gb"
)

func (e PaymentLinkRequestCountry) ToPointer() *PaymentLinkRequestCountry {
	return &e
}

func (e *PaymentLinkRequestCountry) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "fr":
		fallthrough
	case "es":
		fallthrough
	case "de":
		fallthrough
	case "gb":
		*e = PaymentLinkRequestCountry(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentLinkRequestCountry: %v", v)
	}
}

type PaymentLinkRequest struct {
	BankID          *int64                     `json:"bank_id,omitempty"`
	CallbackURL     *string                    `json:"callback_url,omitempty"`
	ClientReference *string                    `json:"client_reference,omitempty"`
	Country         *PaymentLinkRequestCountry `json:"country,omitempty"`
	ExpiredDate     *time.Time                 `json:"expired_date,omitempty"`
	Transactions    []Transaction              `json:"transactions"`
	User            User                       `json:"user"`
}
